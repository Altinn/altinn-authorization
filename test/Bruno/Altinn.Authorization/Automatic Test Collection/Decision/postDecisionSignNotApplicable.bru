meta {
  name: postDecisionSignNotApplicable
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/authorization/api/v1/decision
  body: json
  auth: inherit
}

headers {
  Content-Type: application/json
  Ocp-Apim-Subscription-Key: {{process.env.APIM_SUBSCRIPTION_KEY}}
}

body:json {
  {
      "Request": {
          "ReturnPolicyIdList": false,
          "AccessSubject": [
              {
                  "Attribute": [
                      {
                          "AttributeId": "urn:altinn:org",
                          "Value": "ttd"
                      }
                  ]
              }
          ],
          "Action": [
              {
                  "Attribute": [
                      {
                          "AttributeId": "urn:oasis:names:tc:xacml:1.0:action:action-id",
                          "Value": "sign",
                          "DataType": "http://www.w3.org/2001/XMLSchema#string"
                      }
                  ]
              }
          ],
          "Resource": [
              {
                  "Attribute": [
                      {
                          "AttributeId": "urn:altinn:app",
                          "Value": "apps-test"
                      },
                      {
                          "AttributeId": "urn:altinn:org",
                          "Value": "ttd"
                      }
                  ]
              }
          ]
      }
  }
}

assert {
  ~res.status: eq 200
  ~res.body: contains created
}

script:pre-request {
  const testdata = require(`./Testdata/Authorization/${bru.getEnvVar("tokenEnv")}testdata.json`);
  const sharedtestdata = require(`./Testdata/Authorization/sharedtestdata.json`);
  
  var getTokenParameters = {
    auth_userId: testdata.org1.dagl.userid,
    auth_partyId: testdata.org1.dagl.partyid,
    auth_ssn: testdata.org1.dagl.pid,
    party: testdata.org1.partyid,
    auth_tokenType: sharedtestdata.authTokenType.personal,
    auth_scopes: sharedtestdata.auth_scopes.read
  }
  
  const token = await testTokenGenerator.getToken(getTokenParameters);
  
  bru.setVar("bearerToken",  token);
  
  
}

script:post-response {
  console.log("request url (after): " + req.getUrl());
}

tests {
  
  test("POST Decision result on sign is NotApplicable", function() {
    const testdata = require(`./Testdata/Authorization/${bru.getEnvVar("tokenEnv")}testdata.json`);
    const data = res.getBody();  
    expect(res.status).to.equal(200);
    expect(data.response[0]).to.have.property('decision', "NotApplicable");
  });
}

docs {
  Get a decision from PDP with appOwner details and validate response to have NotApplicable
  
  AccessSubject: ['urn:altinn:org']
  
  Action: ['sign']
  
  Resource: ['urn:altinn:app', 'urn:altinn:org']
}
