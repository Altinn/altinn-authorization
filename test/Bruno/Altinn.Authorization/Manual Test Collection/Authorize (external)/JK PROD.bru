meta {
  name: JK PROD
  type: http
  seq: 11
}

post {
  url: {{baseUrl}}/authorization/api/v1/authorize
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Ocp-Apim-Subscription-Key: {{appsAccessKey}}
}

body:json {
  {
      "Request": {
          "ReturnPolicyIdList": false,
          "AccessSubject": [
              {
                  "Attribute": [
                      {
                          "AttributeId": "urn:altinn:person:identifier-no",
                          "Value": "",
                          "DataType": "http://www.w3.org/2001/XMLSchema#string"
                      }
                  ]
              }
          ],
          "Action": [
              {
                  "Attribute": [
                      {
                          "AttributeId": "urn:oasis:names:tc:xacml:1.0:action:action-id",
                          "Value": "read",
                          "DataType": "http://www.w3.org/2001/XMLSchema#string"
                      }
                  ]
              }
          ],
          "Resource": [
              {
                  "Attribute": [
                      {
                          "AttributeId": "urn:altinn:resource",
                          "Value": "test-ressurs-rf-1086-altinn-autorisasjon",
                          "DataType": "http://www.w3.org/2001/XMLSchema#string"
                      },
                      {
                          "AttributeId": "urn:altinn:organization:identifier-no",
                          "Value": "312824450",
                          "DataType": "http://www.w3.org/2001/XMLSchema#string"
                      }
                  ]
              }
          ]
      }
  }
}

vars:pre-request {
  auth_tokenType: Enterprise
  auth_scopes: altinn:authorization/authorize
  auth_org: digdir
  auth_orgNo: 991825827
}

assert {
  ~res.status: eq 200
  ~res.body: contains created
}

script:pre-request {
  await testTokenGenerator.getToken();
}

tests {
  
  test("3 POST Decision result on read is permit", function() {
    const testdata = require(`./Testdata/Authorization/${bru.getEnvVar("tokenEnv")}testdata.json`);
    const data = res.getBody();  
    expect(res.status).to.equal(200);
    expect(data.response[0]).to.have.property('decision', "Permit");
  });
}

docs {
  Get a decision from PDP with appOwner details and validate response to have Permit.
  
  AccessSubject: ['urn:altinn:org']
  
  Action: ['read']
  
  Resource: ['urn:altinn:app', 'urn:altinn:org']
}
