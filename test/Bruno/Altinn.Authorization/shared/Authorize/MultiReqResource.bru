meta {
  name: MultiReqResource
  type: http
  seq: 18
}

post {
  url: {{baseUrl}}/authorization/api/v1/authorize
  body: json
  auth: inherit
}

headers {
  Content-Type: application/json
  Ocp-Apim-Subscription-Key: {{apimSubscriptionKey}}
}

body:json {
  {
    "Request": {
      "ReturnPolicyIdList": true,
      "AccessSubject": [
        {
          "Id": "s1",
          "Attribute": [
            {
              "AttributeId": "urn:altinn:person:identifier-no",
              "Value": "08069402071"
            }
          ]
        }
      ],
      "Action": [
        {
          "Id": "a1",
          "Attribute": [
            {
              "AttributeId": "urn:oasis:names:tc:xacml:1.0:action:action-id",
              "Value": "read",
              "DataType": "http://www.w3.org/2001/XMLSchema#string",
              "IncludeInResult": true
            }
          ]
        }
      ],
      "Resource": [
        {
          "Id": "r1",
          "Attribute": [
            {
              "AttributeId": "urn:altinn:resource",
              "Value": "security-level0-app",
              "DataType": "http://www.w3.org/2001/XMLSchema#string"
            },
            {
              "AttributeId": "urn:altinn:organization:identifier-no",
              "Value": "910459880",
              "DataType": "http://www.w3.org/2001/XMLSchema#string"
            }
          ]
        },
        {
          "Id": "r2",
          "Attribute": [
            {
              "AttributeId": "urn:altinn:resource",
              "Value": "security-level1-app",
              "DataType": "http://www.w3.org/2001/XMLSchema#string"
            },
            {
              "AttributeId": "urn:altinn:organization:identifier-no",
              "Value": "910459880",
              "DataType": "http://www.w3.org/2001/XMLSchema#string"
            }
          ]
        }
      ],
      "MultiRequests": {
        "RequestReference": [
          {
            "ReferenceId": [
              "s1",
              "a1",
              "r1"
            ]
          },
          {
            "ReferenceId": [
              "s1",
              "a1",
              "r2"
            ]
          }
        ]
      }
    }
  }
}

script:pre-request {
  const sharedtestdata = require(`./Testdata/shared.json`);
  
  var getTokenParameters = {
    auth_tokenType: sharedtestdata.authTokenType.enterprise,
    auth_scopes: sharedtestdata.auth_scopes.authorize,
    auth_org: sharedtestdata.serviceOwners.ttd.org,
    auth_orgNo: sharedtestdata.serviceOwners.ttd.orgno,
  }
  
  const token = await testTokenGenerator.getToken(getTokenParameters);
  bru.setVar("bearerToken",  token);
}
