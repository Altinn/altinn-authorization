name: CD Apps

on:
  push:

permissions:
  id-token: write

env:
  IMAGE_NAME: altinn-authorization
  APP_NAME: Altinn.AccessManagement
  TEAM_NAME: team-authorization
  DOCKER_LOGIN_SERVER: ${{ vars.ARM_ACR }}.azurecr.io

jobs:
  # bundle:
  #   name: Bundle Apps
  #   uses: ./.github/workflows/template-bundle.yml
  #   with:
  #     dir: apps

  cd_containerize:
    name: Containerize
    # needs: bundle
    runs-on: ubuntu-latest
    environment: at21
    # strategy:
    #   matrix:
    #     name: ${{ fromJson(needs.bundle.outputs.dirs) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set short SHA
        id: set_short_sha
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "IMAGE=${{ env.DOCKER_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$SHORT_SHA" >> $GITHUB_ENV
          echo "image=${{ env.DOCKER_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.ARM_CLIENT_ID }}
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          subscription-id: ${{ vars.ARM_ACR_SUBSCRIPTION_ID }}

      - name: Log in to Container registry
        run: |
          az acr login --name ${{ vars.ARM_ACR }} --expose-token --output tsv --query accessToken --subscription ${{ vars.ARM_ACR_SUBSCRIPTION_ID }} --only-show-errors | docker login ${{ env.DOCKER_LOGIN_SERVER }} --username 00000000-0000-0000-0000-000000000000 --password-stdin

      - name: Docker build
        run: |
          docker build --build-arg APP_NAME=${{ env.APP_NAME }} . -t ${{ env.IMAGE }}

      - name: Docker push
        run: |
          docker push ${{ env.IMAGE }}
