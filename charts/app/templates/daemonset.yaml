apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "fullname" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.linkerd.enabled }}
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/skip-outbound-ports: '443'
      {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ required "image.tag not set" .Values.image.tag }}"
          securityContext:
            runAsUser: 1000
            runAsGroup: 3000
            allowPrivilegeEscalation: false
          ports:
            - containerPort: {{ .Values.image.containerPort }}
          env:
            {{- if not (hasKey .Values.environmentVariables .Values.environment) }}
              {{ fail "the chosen environment does not exist" }}
            {{- end }}
            {{- $environmentVariables := index $.Values.environmentVariables $.Values.environment }}
            {{- range $variable := $environmentVariables }}
            - name: {{ $variable.name }}
              {{- if $variable.value }}
              value: {{ $variable.value | quote }}
              {{- end }}
              {{- if $variable.valueFrom }}
              valueFrom:
                {{- if $variable.valueFrom.secretKeyRef}}
                secretKeyRef:
                  name: {{ $variable.valueFrom.secretKeyRef.name }}
                  key: {{ $variable.valueFrom.secretKeyRef.key }}
                {{- end }}
              {{- end }}
            {{- end }}
          readinessProbe:
            # an http probe
            httpGet:
              path: /health/
              port: {{ .Values.service.internalPort }}
            # length of time to wait for a pod to initialize
            # after pod startup, before applying health checking
            initialDelaySeconds: 90
            failureThreshold: 3
            periodSeconds: 3
            timeoutSeconds: 1
          livenessProbe:
              # an http probe
              httpGet:
                path: /health/
                port: {{ .Values.service.internalPort }}
              #  The initialDelaySeconds field tells the kubelet that it should wait 3 seconds before performing the first probe.
              initialDelaySeconds: 60
              failureThreshold: 3
              periodSeconds: 10
          {{- if .Values.volumeMounts}}
          volumeMounts:
            {{- range $mount := .Values.volumeMounts}}
            - name: {{ $mount.name }}
              mountPath: {{ $mount.mountPath }}
            {{- end }}
          {{- end }}
        {{- if .Values.volumes }}
      volumes:
      {{- range $volume := .Values.volumes }}
        - name: {{ $volume.name }}
          {{- if $volume.persistantVolumeClaim }}
          persistantVolumeClaim:
            claimName: {{ $volume.persistantVolumeClaim.claimName }}
          {{- end }}
          {{- if $volume.secret }}
          secret:
            secretName: {{ $volume.secret.secretName }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.image.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret }}
      {{- end }}